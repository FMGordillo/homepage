---
const { title } = Astro.props.frontmatter || Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body
    class="max-w-screen-sm m-auto py-4 px-8 flex flex-col gap-4 dark:text-white dark:bg-black"
  >
    <nav class="flex">
      <ul class="flex mx-auto space-x-4">
        <li class="after:content-['|'] after:ml-4"><a href="/">Home</a></li>
        <li class="after:content-['|'] after:ml-4">
          <a href="/articles/why-i-changed-to-vim">Why I changed to Vim</a>
        </li>
        <li><button id="search-button">Search</button></li>
      </ul>
    </nav>
    <slot />
  </body>
  <div id="search-bar" class="hidden inset-x-0 inset-y-0 z-1">
    <input
      class="text-black py-2 px-4 rounded"
      placeholder="Search an article"
    />
  </div>
  <script>
    const searchBarEl = document.querySelector("#search-bar");
    const searchButtonEl = document.querySelector("#search-button");

    const getIsInputHidden = () => searchBarEl?.classList.contains("hidden");

    const handleInputHide = () => {
      if (searchBarEl) {
        searchBarEl.classList.add("hidden");
        searchBarEl.classList.remove("fixed");
        (searchBarEl.children[0] as HTMLInputElement).value = "";
      }
    };

    const handleInputShow = () => {
      if (searchBarEl) {
        searchBarEl.classList.add("fixed");
        searchBarEl.classList.remove("hidden");
        (searchBarEl.children[0] as HTMLInputElement).focus();
      }
    };

    window.addEventListener("click", function handleClick(e) {
      if (!getIsInputHidden() && e.target === searchBarEl) {
        e.preventDefault();
        handleInputHide();
        return;
      }
    });

    window.addEventListener("keydown", function handleOpenSearch(e) {
      if (searchBarEl) {
        if (e.key === "Escape") {
          e.preventDefault();
          handleInputHide();
        }

        if (e.ctrlKey && e.key === "k") {
          e.preventDefault();
          if (getIsInputHidden()) {
            handleInputShow();
          } else {
            handleInputHide();
          }
        }
      }
    });

    searchButtonEl?.addEventListener(
      "click",
      function handleSearchButtonClick(e) {
        e.preventDefault();
        handleInputShow();
      }
    );

    searchBarEl?.addEventListener("keydown", function handleSearch(e) {
      if ((e as KeyboardEvent).key === "Enter") {
        e.preventDefault();
        console.log("TODO: Handle search");
      }
    });
  </script>
</html>
